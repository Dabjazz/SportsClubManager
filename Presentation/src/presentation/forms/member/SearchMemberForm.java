package presentation.forms.member;

import contract.ISearchChangeMember;
import dto.contract.IAddress;
import dto.contract.IClubTeam;
import dto.contract.ICountry;
import dto.contract.IDepartment;
import dto.contract.IDepartmentHead;
import dto.contract.IMember;
import dto.contract.IPlayer;
import dto.contract.IRole;
import dto.contract.ITrainer;
import java.awt.event.ActionEvent;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableModel;
import presentation.basics.AbstractForm;
import presentation.basics.AbstractMainForm;
import services.ServiceClient;
import services.ServiceNotAvailableException;

/**
 *
 * @author Lucia
 */
public class SearchMemberForm extends AbstractMainForm {
    
    private boolean dataExists;
    ServiceClient client;
    ISearchChangeMember controller;
    IMember member;
    IMember user;
    List<IRole> roles;
    IDepartment department;
    IAddress address;
    ICountry country;
    IClubTeam clubTeam;

    /**
     * Creates new form SearchMemb
     */
    public SearchMemberForm(AbstractForm form, ServiceClient client, IMember user) throws ServiceNotAvailableException {
        super(form);
        this.client = client;
        this.user = user;
        controller = this.client.getSearchChangeMemberService();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paneSearch = new javax.swing.JPanel();
        txtfieldSearchMemb = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabMember = new javax.swing.JTable();
        paneMemberData = new javax.swing.JPanel();
        lblFName = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        lblBirthDate = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        radioFemale = new javax.swing.JRadioButton();
        radioMale = new javax.swing.JRadioButton();
        lblEntryDate = new javax.swing.JLabel();
        lblDepartment = new javax.swing.JLabel();
        lblTeam = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        radioAdmin = new javax.swing.JRadioButton();
        radioTrainer = new javax.swing.JRadioButton();
        radioPlayer = new javax.swing.JRadioButton();
        comboTeam = new javax.swing.JComboBox();
        lblLName = new javax.swing.JLabel();
        lblPostCode = new javax.swing.JLabel();
        lblCountry = new javax.swing.JLabel();
        lblMail = new javax.swing.JLabel();
        txtfieldLName = new javax.swing.JTextField();
        txtfieldPostCode = new javax.swing.JTextField();
        txtfieldCountry = new javax.swing.JTextField();
        txtfieldMail = new javax.swing.JTextField();
        txtfieldFName = new javax.swing.JTextField();
        txtfieldAddress = new javax.swing.JTextField();
        txtfieldCity = new javax.swing.JTextField();
        txtfieldPhone = new javax.swing.JTextField();
        dateBirthday = new com.toedter.calendar.JDateChooser();
        dateEntry = new com.toedter.calendar.JDateChooser();
        comboDepartment = new javax.swing.JComboBox();
        lblMemberNr = new javax.swing.JLabel();
        txtfieldMemberNr = new javax.swing.JTextField();
        btnApplyChange = new javax.swing.JButton();
        radioCaretaker = new javax.swing.JRadioButton();
        radioDepHead = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(848, 549));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tabMember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Membership Nr.", "First Name", "Last Name", "Birth Date", "Gender"
            }
        ));
        tabMember.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                tableMemberValueChanged(e);
            }
        });
        jScrollPane1.setViewportView(tabMember);

        paneMemberData.setBorder(javax.swing.BorderFactory.createTitledBorder("Details"));

        lblFName.setText("First Name");

        lblAddress.setText("Address");

        lblCity.setText("City");

        lblPhone.setText("Phone");

        lblBirthDate.setText("Birth Date");

        lblGender.setText("Gender");

        radioFemale.setText("female");
        radioFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFemaleActionPerformed(evt);
            }
        });

        radioMale.setText("male");
        radioMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMaleActionPerformed(evt);
            }
        });

        lblEntryDate.setText("Entry Date");

        lblDepartment.setText("Department");

        lblTeam.setText("Team");

        lblRole.setText("Role");

        radioAdmin.setText("Admin");
        radioAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioAdminActionPerformed(evt);
            }
        });

        radioTrainer.setText("Trainer");
        radioTrainer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTrainerActionPerformed(evt);
            }
        });

        radioPlayer.setText("Player");
        radioPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioPlayerActionPerformed(evt);
            }
        });

        comboTeam.setModel(new javax.swing.DefaultComboBoxModel(getComboTeam()));
        comboTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTeamActionPerformed(evt);
            }
        });

        lblLName.setText("Last Name");

        lblPostCode.setText("Post Code");

        lblCountry.setText("Country");

        lblMail.setText("Mail");

        txtfieldPostCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfieldPostCodeActionPerformed(evt);
            }
        });

        dateEntry.setEnabled(false);

        comboDepartment.setModel(new javax.swing.DefaultComboBoxModel(getComboDepartment()));
        comboDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDepartmentActionPerformed(evt);
            }
        });

        lblMemberNr.setText("Membership Nr.");

        btnApplyChange.setText("Apply Changes");
        btnApplyChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyChangeActionPerformed(evt);
            }
        });

        radioCaretaker.setText("Caretaker");
        radioCaretaker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCaretakerActionPerformed(evt);
            }
        });

        radioDepHead.setText("Department Head");
        radioDepHead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDepHeadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneMemberDataLayout = new javax.swing.GroupLayout(paneMemberData);
        paneMemberData.setLayout(paneMemberDataLayout);
        paneMemberDataLayout.setHorizontalGroup(
            paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneMemberDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneMemberDataLayout.createSequentialGroup()
                        .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFName)
                            .addComponent(lblAddress)
                            .addComponent(lblCity)
                            .addComponent(lblPhone)
                            .addComponent(lblBirthDate)
                            .addComponent(lblEntryDate)
                            .addComponent(lblTeam)
                            .addComponent(lblRole))
                        .addGap(26, 26, 26)
                        .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, paneMemberDataLayout.createSequentialGroup()
                                    .addComponent(radioAdmin)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(radioCaretaker)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(radioDepHead)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(radioTrainer)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(radioPlayer)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnApplyChange))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, paneMemberDataLayout.createSequentialGroup()
                                    .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(comboDepartment, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtfieldCity, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtfieldFName, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtfieldAddress, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtfieldPhone, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dateBirthday, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(dateEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(133, 133, 133)
                                    .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblGender)
                                        .addComponent(lblMail)
                                        .addGroup(paneMemberDataLayout.createSequentialGroup()
                                            .addComponent(lblLName)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtfieldLName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneMemberDataLayout.createSequentialGroup()
                                            .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(paneMemberDataLayout.createSequentialGroup()
                                                    .addComponent(lblPostCode)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneMemberDataLayout.createSequentialGroup()
                                                    .addGap(0, 0, Short.MAX_VALUE)
                                                    .addComponent(lblCountry)
                                                    .addGap(21, 21, 21)))
                                            .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtfieldCountry, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                                .addComponent(txtfieldPostCode)
                                                .addComponent(txtfieldMail)
                                                .addGroup(paneMemberDataLayout.createSequentialGroup()
                                                    .addComponent(radioFemale)
                                                    .addGap(10, 10, 10)
                                                    .addComponent(radioMale))))
                                        .addGroup(paneMemberDataLayout.createSequentialGroup()
                                            .addComponent(lblMemberNr)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtfieldMemberNr)))))))
                    .addComponent(lblDepartment))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        paneMemberDataLayout.setVerticalGroup(
            paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneMemberDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(paneMemberDataLayout.createSequentialGroup()
                        .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtfieldFName)
                            .addComponent(txtfieldLName)
                            .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblFName)
                                .addComponent(lblLName)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(paneMemberDataLayout.createSequentialGroup()
                                .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblAddress)
                                    .addComponent(lblPostCode)
                                    .addComponent(txtfieldPostCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCity)
                                    .addComponent(lblCountry)
                                    .addComponent(txtfieldCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblPhone)
                                    .addComponent(lblMail)
                                    .addComponent(txtfieldMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblBirthDate)
                                    .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblGender)
                                        .addComponent(radioFemale)
                                        .addComponent(radioMale))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneMemberDataLayout.createSequentialGroup()
                                .addComponent(txtfieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfieldCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dateBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEntryDate, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dateEntry, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblMemberNr)
                        .addComponent(txtfieldMemberNr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDepartment)
                    .addComponent(comboDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTeam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneMemberDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioAdmin)
                    .addComponent(radioTrainer)
                    .addComponent(radioPlayer)
                    .addComponent(lblRole)
                    .addComponent(btnApplyChange)
                    .addComponent(radioCaretaker)
                    .addComponent(radioDepHead))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout paneSearchLayout = new javax.swing.GroupLayout(paneSearch);
        paneSearch.setLayout(paneSearchLayout);
        paneSearchLayout.setHorizontalGroup(
            paneSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 828, Short.MAX_VALUE)
                    .addGroup(paneSearchLayout.createSequentialGroup()
                        .addComponent(txtfieldSearchMemb, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)
                        .addGap(0, 557, Short.MAX_VALUE))
                    .addComponent(paneMemberData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        paneSearchLayout.setVerticalGroup(
            paneSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfieldSearchMemb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(paneMemberData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtfieldPostCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfieldPostCodeActionPerformed
        
    }//GEN-LAST:event_txtfieldPostCodeActionPerformed

    private void comboTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTeamActionPerformed
        String name = comboTeam.getSelectedItem().toString();

        setClubTeam(name);
    }//GEN-LAST:event_comboTeamActionPerformed

    private void radioAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioAdminActionPerformed

    private void radioFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFemaleActionPerformed
        genderActionPerformed(evt);
    }//GEN-LAST:event_radioFemaleActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if (txtfieldSearchMemb.getText() == null) {
            JOptionPane.showMessageDialog(parent, "Please enter a name!");
        } else {
            List<IMember> result = controller.getMatchingMembers(txtfieldSearchMemb.getText());

            if (result == null || result.isEmpty()) {
                JOptionPane.showMessageDialog(parent, "Your entry ' " + txtfieldSearchMemb.getText() + "' could not be found!");
            } else {
                TableModel tableModel = tabMember.getModel();

                for (int row = 0; row < result.size(); row++) {
                    IMember tmpMember = result.remove(row);

                    tableModel.setValueAt(tmpMember.getId().toString(), row, 0);
                    tableModel.setValueAt(tmpMember.getPrename(), row, 1);
                    tableModel.setValueAt(tmpMember.getLastname(), row, 2);
                    tableModel.setValueAt(tmpMember.getDateOfBirth().toString(), row, 3);
                    if (tmpMember.getGender() == true) {
                        tableModel.setValueAt("female", row, 4);
                    } else {
                        tableModel.setValueAt("male", row, 4);
                    }
                }
                tabMember.setModel(tableModel);
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tableMemberValueChanged(ListSelectionEvent e){
        final int row = tabMember.getSelectedRow();
        Integer id = (Integer) tabMember.getModel().getValueAt(row, 1);

        if (id != null) {
            member = controller.getMember(id);
            updateDetailPane();
        }
    }
    
    private void btnApplyChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyChangeActionPerformed
        if (dataExists != false) {
            updateMemberData();
            //TODO: Throw exception in case of an error !!!!!

        } else {
            JOptionPane.showMessageDialog(parent, "There is no data to change!");
        }
    }//GEN-LAST:event_btnApplyChangeActionPerformed

    private void radioMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMaleActionPerformed
        genderActionPerformed(evt);
    }//GEN-LAST:event_radioMaleActionPerformed

    private void comboDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDepartmentActionPerformed
        String name = comboDepartment.getSelectedItem().toString();
        List<IDepartment> depList = controller.getDepartments();

        for (int i = 0; i < depList.size(); i++) {
            if (depList.get(i).getName().equals(name)) {
                department = depList.get(i);
            }
        }
        comboTeam.setModel(new DefaultComboBoxModel(getComboTeam()));
    }//GEN-LAST:event_comboDepartmentActionPerformed

    private void radioTrainerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTrainerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioTrainerActionPerformed

    private void radioPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioPlayerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioPlayerActionPerformed

    private void radioCaretakerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCaretakerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioCaretakerActionPerformed

    private void radioDepHeadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDepHeadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioDepHeadActionPerformed

    private void updateDetailPane() {

        dataExists = true;
        txtfieldMemberNr.setText(member.getId().toString());
        txtfieldFName.setText(member.getPrename());
        txtfieldLName.setText(member.getLastname());
        txtfieldMail.setText(member.getEmailAddress());
        txtfieldPhone.setText(member.getTelephonenumber());

        address = controller.getAddress(member.getAddress());
        txtfieldAddress.setText(address.getStreet());
        //TODO: ADD AN EXTRA STREET NR FIELD
        //txtfieldStreetNr.setText(address.getStreetNumber());
        String postCode = Integer.toString(address.getPostalCode());
        txtfieldPostCode.setText(postCode);
        txtfieldCity.setText(address.getVillage());

        country = controller.getCountry(member.getNationality());
        txtfieldCountry.setText(country.getName());

        if (member.getGender()) {
            radioFemale.setSelected(true);
        } else {
            radioMale.setSelected(true);
        }

        dateEntry.setDate(member.getMemberFrom());
        dateBirthday.setDate(member.getDateOfBirth());

        roles = controller.getRoles(member.getId());
        for (IRole role : roles) {
            if (role.getClass().isInstance(IDepartmentHead.class)) {
                radioAdmin.setSelected(true);
            }
            if (role.getClass().isInstance(ITrainer.class)) {
                radioTrainer.setSelected(true);
            }
            if (role.getClass().isInstance(IPlayer.class)) {
                radioPlayer.setSelected(true);
            }
        }

        department = controller.getDepartment(member.getId());
        comboDepartment.setModel(new DefaultComboBoxModel(getComboDepartment()));
        comboDepartment.getModel().setSelectedItem(department.getName());

        comboTeam.setModel(new DefaultComboBoxModel(getComboTeam()));

        //focus auf team dessen member momentan teil ist
    }

    private void updateMemberData() {

        member.setPrename(txtfieldFName.getText());
        member.setLastname(txtfieldLName.getText());
        member.setDateOfBirth(dateBirthday.getDate());
        member.setMemberFrom(dateEntry.getDate());
        member.setTelephonenumber(txtfieldPhone.getText());
        member.setEmailAddress(txtfieldMail.getText());
        //member.setId(Integer.parseInt(txtfieldMemberNr.getText()));

        address.setStreet(txtfieldAddress.getText());
        address.setPostalCode(Integer.parseInt(txtfieldPostCode.getText()));
        address.setVillage(txtfieldCity.getText());
        country.setName(txtfieldCountry.getText());
        member.setNationality(country.getId());

        if (radioFemale.isSelected()) {
            member.setGender(true);
        } else {
            member.setGender(false);
        }

        department = getSelectedDepartment();
        
        //get selected roles
        if (radioAdmin.isSelected()) { 
            IDepartmentHead depHead = null;
            roles.add(depHead);        
        }
        if (radioTrainer.isSelected()) {
            ITrainer trainer = null;
            roles.add(trainer);            
        }
        if (radioPlayer.isSelected()) {
            IPlayer player =null;
            roles.add(player);            
        }
        
        List<Integer> roleInt = new LinkedList<>();
        for(IRole role: roles){
            roleInt.add(role.getId());
        }        
        member.setRoleList(roleInt);

        
        //make sure clubTeam is set right
        setClubTeam(comboTeam.getSelectedItem().toString());

        controller.setNewMember(member, address, department, clubTeam, roles.get(roles.size()-1));
    }

    //List<IDepartment>
    private List<String> getDepartments() {
        List<IDepartment> depList = controller.getDepartments();
        Iterator<IDepartment> depIterator = depList.iterator();
        List<String> depNames = new LinkedList<>();

        while (depIterator.hasNext()) {
            depNames.add(depIterator.next().getName());
        }

        return depNames;
    }

    //private IDepartment[] getComboDepartment() {
    private String[] getComboDepartment() {
        if (department != null) {
            List<IDepartment> depList = controller.getDepartments();
            Iterator<IDepartment> depIterator = depList.iterator();
            String[] depArray = new String[depList.size()];

            for (int i = 0; depIterator.hasNext(); i++) {
                depArray[i] = depIterator.next().getName();
            }
            return depArray;
        } else {
            return new String[]{"Department"};
        }
    }

    private String[] getComboTeam() {
        if (department != null) {
            List<Integer> cTeamInt = department.getClubTeamList();
            List<IClubTeam> cTeamList = controller.getClubTeams(cTeamInt);
            Iterator<IClubTeam> cTeamIterator = cTeamList.iterator();
            String[] cTeamArray = new String[cTeamList.size()];

            for (int i = 0; cTeamIterator.hasNext(); i++) {
                cTeamArray[i] = cTeamIterator.next().getName();
            }
            return cTeamArray;
        } else {
            return new String[]{"Team"};
        }
    }

    private void setClubTeam(String name) {
        List<Integer> cTeamInt = department.getClubTeamList();
        List<IClubTeam> cTeamList = controller.getClubTeams(cTeamInt);

        for (int i = 0; i < cTeamList.size(); i++) {
            if (cTeamList.get(i).getName().equals(name)) {
                clubTeam = cTeamList.get(i);
            }
        }
    }

    private IDepartment getSelectedDepartment() {
        String name = comboDepartment.getSelectedItem().toString();        
        List<IDepartment> departList = controller.getDepartments();
        IDepartment selDepartment = null;
        
        for(IDepartment d : departList){
            if(d.getName().equals(name)){
                selDepartment = d;
                break;
            }
        }
        return selDepartment;
    }
    
    private void genderActionPerformed(ActionEvent evt) {
        if (evt.getSource() == radioFemale) {
            if (radioFemale.isSelected()) {
                radioMale.setEnabled(false);
            } else {
                radioMale.setEnabled(true);
            }
        } else {
            if (radioMale.isSelected()) {
                radioFemale.setEnabled(false);
            } else {
                radioFemale.setEnabled(true);
            }
        }
    }

    public JPanel getPanel(){
        return paneSearch;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApplyChange;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox comboDepartment;
    private javax.swing.JComboBox comboTeam;
    private com.toedter.calendar.JDateChooser dateBirthday;
    private com.toedter.calendar.JDateChooser dateEntry;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblBirthDate;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblEntryDate;
    private javax.swing.JLabel lblFName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblLName;
    private javax.swing.JLabel lblMail;
    private javax.swing.JLabel lblMemberNr;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPostCode;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblTeam;
    private javax.swing.JPanel paneMemberData;
    private javax.swing.JPanel paneSearch;
    private javax.swing.JRadioButton radioAdmin;
    private javax.swing.JRadioButton radioCaretaker;
    private javax.swing.JRadioButton radioDepHead;
    private javax.swing.JRadioButton radioFemale;
    private javax.swing.JRadioButton radioMale;
    private javax.swing.JRadioButton radioPlayer;
    private javax.swing.JRadioButton radioTrainer;
    private javax.swing.JTable tabMember;
    private javax.swing.JTextField txtfieldAddress;
    private javax.swing.JTextField txtfieldCity;
    private javax.swing.JTextField txtfieldCountry;
    private javax.swing.JTextField txtfieldFName;
    private javax.swing.JTextField txtfieldLName;
    private javax.swing.JTextField txtfieldMail;
    private javax.swing.JTextField txtfieldMemberNr;
    private javax.swing.JTextField txtfieldPhone;
    private javax.swing.JTextField txtfieldPostCode;
    private javax.swing.JTextField txtfieldSearchMemb;
    // End of variables declaration//GEN-END:variables
}
